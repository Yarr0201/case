const itemsData = [
    { name: "M4A1-S | –í–µ–π–ø–æ—Ä–µ–π–≤", img: "img/skins/m4a1-s_–≤–µ–π–ø–æ—Ä–µ–π–≤_red.png", rarity: "red" },
    { name: "M4A4 | –ò–º–ø–µ—Ä–∞—Ç–æ—Ä", img: "img/skins/m4a4_–∏–º–ø–µ—Ä–∞—Ç–æ—Ä_red.png", rarity: "red" },
    { name: "M4A4 | –ö–æ—Ä–æ–ª—å –î—Ä–∞–∫–æ–Ω–æ–≤", img: "img/skins/m4a4_–∫–æ—Ä–æ–ª—å–¥—Ä–∞–∫–æ–Ω–æ–≤_—Ñ–∏–æ–ª–µ—Ç.png", rarity: "purple" },
    { name: "M4A4 | –¢—É—Ä–±–∏–Ω–∞", img: "img/skins/m4a4_—Ç—É—Ä–±–∏–Ω–∞_viol.png", rarity: "purple" },
    { name: "M249 | –ì–∏–ø–Ω–æ—Ç–∏–∑—ë—Ä", img: "img/skins/m249_–≥–∏–ø–æ–Ω–æ—Ç–∏–∑—ë—Ä_blue.png", rarity: "blue" },
    { name: "MAC-10 | –°–∞–π–±–∏ –û–Ω–∏", img: "img/skins/mac-10_—Å–∞–π–±–∏_–æ–Ω–∏_blue.png", rarity: "blue" },
    { name: "P90 | –†—ç–Ω–¥–∏ –†–∞—à", img: "img/skins/p90_—Ä—ç–Ω–¥–∏_—Ä–∞—à_—Ä–µ–∑–≤—ã–π_viol.png", rarity: "purple" },
    { name: "AK-47 | –î–∏–ª–µ—Ç–∞–Ω—Ç—ã", img: "img/skins/–∞–∫-47_–¥–∏–ª–µ—Ç–∞–Ω—Ç—ã_—Ñ–∏–æ–ª–µ—Ç.png", rarity: "purple" },
    { name: "Dual Berettas | –ì–∏–¥—Ä–æ—É–¥–∞—Ä", img: "img/skins/–¥–≤–æ–π–Ω—ã–π–±–µ—Ä–µ—Ç—ã_–≥–∏–¥—Ä–æ—É–¥–∞—Ä_viol.png", rarity: "purple" },
    { name: "–ö—É–∫—Ä–∏ | –ë–∞–≥—Ä–æ–≤–∞—è —Å–µ—Ç—å", img: "img/skins/–∫—É–∫—Ä–∏_–±–∞–≥—Ä–æ–≤–∞—è —Å–µ—Ç—å_gold.png", rarity: "gold" },
  ];
  
  const itemsContainer = document.getElementById("items");
  const spinBtn = document.getElementById("spin");
  const resultText = document.getElementById("result");
  
  const flash = document.createElement("div");
  flash.classList.add("flash");
  document.body.appendChild(flash);
  
  /* === –¶–≤–µ—Ç —Ä–µ–¥–∫–æ—Å—Ç–∏ (–≥—Ä–∞–¥–∏–µ–Ω—Ç—ã) === */
  function getRarityColor(rarity) {
    switch (rarity) {
      case "blue":
        return "linear-gradient(315deg, #0a1447 0%, #274bff 50%, #7ba9ff 100%)";
      case "purple":
        return "linear-gradient(315deg, #1d004d 0%, #7a2aff 50%, #d07bff 100%)";
      case "red":
        return "linear-gradient(315deg, #3a0000 0%, #b11a1a 50%, #ff6666 100%)";
      case "gold":
        return "linear-gradient(315deg, #2b2100 0%, #ffb400 50%, #fff6a0 100%)";
      default:
        return "linear-gradient(315deg, #111 0%, #444 100%)";
    }
  }
  
  /* === –≠—Ñ—Ñ–µ–∫—Ç—ã === */
  function createSparks() {
    for (let i = 0; i < 20; i++) {
      const spark = document.createElement("div");
      spark.classList.add("spark");
      spark.style.left = "50%";
      spark.style.top = "50%";
      spark.style.setProperty("--tx", `${(Math.random() - 0.5) * 400}px`);
      spark.style.setProperty("--ty", `${(Math.random() - 0.5) * 400}px`);
      document.body.appendChild(spark);
      setTimeout(() => spark.remove(), 1000);
    }
  }
  
  function triggerFlash() {
    flash.style.opacity = "1";
    setTimeout(() => (flash.style.opacity = "0"), 300);
  }
  
  /* === –°–æ–∑–¥–∞–Ω–∏–µ –ª–µ–Ω—Ç—ã === */
  function renderItems() {
    itemsContainer.innerHTML = "";
    const repeatCount = 6;
    for (let i = 0; i < repeatCount; i++) {
      itemsData.forEach(item => {
        const el = document.createElement("div");
        el.classList.add("item");
        el.style.backgroundImage = getRarityColor(item.rarity);
        el.innerHTML = `
          <div class="item-content">
            <img src="${item.img}" alt="${item.name}">
            <span class="item-name">${item.name}</span>
          </div>
        `;
        itemsContainer.appendChild(el);
      });
    }
  }
  
  
// –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Ä–æ–≤–Ω–æ —Ç–æ—Ç —Å–∫–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª—å–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ —Ü–µ–Ω—Ç—Ä–æ–º —Ä–∞–º–∫–∏
function updateActiveItem() {
    const wnd = document.querySelector('.case-window');
    if (!wnd) return;
  
    const wr = wnd.getBoundingClientRect();
    const centerX = wr.left + wr.width / 2;
    const centerY = wr.top + wr.height / 2;
  
    const cards = itemsContainer.querySelectorAll('.item');
    if (!cards.length) return;
  
    // ‚ö†Ô∏è –í—Ä–µ–º–µ–Ω–Ω–æ —É–±–∏—Ä–∞–µ–º pointer, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é
    const pointer = document.querySelector('.pointer');
    if (pointer) pointer.style.visibility = "hidden";
  
    const topEl = document.elementFromPoint(centerX, centerY);
    const activeItem = topEl ? topEl.closest('.item') : null;
  
    if (pointer) pointer.style.visibility = "visible";
  
    // –°–Ω–∏–º–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–æ –≤—Å–µ—Ö, —Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–¥–∏–Ω
    cards.forEach(c => c.classList.remove('active'));
    if (activeItem) activeItem.classList.add('active');
  }
  
  renderItems();
    updateActiveItem()
 
  // –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–∏
  let animRaf = null;
  function startWatch() {
    if (animRaf) cancelAnimationFrame(animRaf);
    const tick = () => {
      updateActiveItem();
      animRaf = requestAnimationFrame(tick);
    };
    tick();
  }
  function stopWatch() {
    if (animRaf) cancelAnimationFrame(animRaf);
    animRaf = null;
    updateActiveItem();
  }
  
  
  /* === –ö—Ä—É—Ç–∏–ª–∫–∞ === */
/* === –ö—Ä—É—Ç–∏–ª–∫–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏) === */
function spin() {
  // –±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
  spinBtn.disabled = true;

  const totalItems = itemsContainer.children.length;
  const itemWidth = 160;

  // —Å–ª—É—á–∞–π–Ω—ã–π —Å–¥–≤–∏–≥
  const randomOffset = Math.floor(Math.random() * (totalItems / 2)) * itemWidth;
  const visibleCenter = itemsContainer.parentElement.offsetWidth / 2 - itemWidth / 2;
  const stopPosition = -(randomOffset) + visibleCenter - 2;

  // —Å–±—Ä–æ—Å –∏ –∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏
  itemsContainer.style.transition = "none";
  itemsContainer.style.transform = "translateX(0px)";
  void itemsContainer.offsetWidth;

  itemsContainer.style.transition = "transform 5s cubic-bezier(0.05, 0.5, 0.1, 1)";
  itemsContainer.style.transform = `translateX(${stopPosition}px)`;

  // –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–æ –≤—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è
  startWatch();

  // –∫–æ–≥–¥–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å
  itemsContainer.addEventListener(
    "transitionend",
    () => {
      // –ø–µ—Ä–µ—Å—Ç–∞—ë–º –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π
      stopWatch();

      // –±–µ—Ä—ë–º —Ä–æ–≤–Ω–æ —Ç—É –∫–∞—Ä—Ç–æ—á–∫—É, —á—Ç–æ –ø–æ–¥ —Ä–∞–º–∫–æ–π (–µ—ë –æ—Ç–º–µ—Ç–∏–ª updateActiveItem)
      const active = document.querySelector(".item.active");
      if (active) {
        const name = active.querySelector(".item-name")?.textContent?.trim() || "‚Äî";
        // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–ª—å–∫–æ –°–ï–ô–ß–ê–°
        resultText.style.opacity = "0";
        resultText.textContent = `üéØ –í—ã–ø–∞–ª–æ: ${name}`;
        resultText.style.transition = "opacity 0.25s ease";
        requestAnimationFrame(() => (resultText.style.opacity = "1"));

        // —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è —Ä–µ–¥–∫–∏—Ö
        const rarity =
          itemsData.find((i) => i.name === name)?.rarity || "";
        if (["red", "gold"].includes(rarity)) {
          triggerFlash();
          createSparks();
        }
      }

      // —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
      spinBtn.disabled = false;
    },
    { once: true }
  );
}

spinBtn.addEventListener("click", spin);



  
// === –ö–Ω–æ–ø–∫–∞ "–í–æ–π—Ç–∏" (—Å–ø—Ä–∞–≤–∞) ===
const loginBtnRight = document.getElementById("login-btn-right");
if (loginBtnRight) {
  loginBtnRight.addEventListener("click", () => {
    alert("üîê –ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ (–¥–æ–±–∞–≤–∏–º –ø–æ–∑–∂–µ)");
  });
}


//–ú–æ–Ω–µ—Ç–∞
const balanceDisplay = document.getElementById("balance-display");
let balance = 0;

function updateBalance(amount) {
  balance += amount;
  balanceDisplay.textContent = `üí∞ ${balance}‚ÇΩ`;
}


// === –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ ===
const navButtons = document.querySelectorAll(".nav-btn");
navButtons.forEach(btn => {
  btn.addEventListener("click", () => {
    navButtons.forEach(b => b.classList.remove("active"));
    btn.classList.add("active");
  });
});
